load("@io_bazel_rules_go//go:def.bzl", "go_library")
load("@aspect_bazel_lib//lib:copy_to_bin.bzl", "copy_to_bin")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config")

# Gazelle config
#
# gazelle:prefix github.com/sourcegraph/sourcegraph
# gazelle:build_file_name BUILD.bazel

# Disable some by default, only include configured BUILDs
#
# gazelle:js disabled

# Enable only the Aspect javascript plugin for gazelle
# gazelle:lang js

package(default_visibility = ["//visibility:public"])

npm_link_all_packages(name = "node_modules")

js_library(
    name = "prettier_config_js",
    srcs = ["prettier.config.js"],
    data = [
        "//:node_modules/@sourcegraph/prettierrc",
    ],
)

js_library(
    name = "postcss_config_js",
    srcs = ["postcss.config.js"],
    deps = [
        "//:node_modules/autoprefixer",
        "//:node_modules/postcss-custom-media",
        "//:node_modules/postcss-focus-visible",
        "//:node_modules/postcss-inset",
    ],
)

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = ["//visibility:public"],
    deps = [
        "//:node_modules/@sourcegraph/tsconfig",
    ],
)

load("@bazel_gazelle//:def.bzl", "gazelle")

# gazelle:prefix github.com/sourcegraph/sourcegraph
gazelle(name = "gazelle")

go_library(
    name = "sourcegraph",
    srcs = [
        "doc.go",
        "gen.go",
    ],
    importpath = "github.com/sourcegraph/sourcegraph",
)

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
        "-build_file_proto_mode=disable_global",
    ],
    command = "update-repos",
)

copy_to_bin(
    name = "jest.config.base",
    srcs = ["jest.config.base.js"],
    visibility = ["//visibility:public"],
)

# https://github.com/aspect-build/rules_jest/issues/90
js_library(
    name = "jest_config",
    testonly = True,
    srcs = ["jest.config.base.js"],
    visibility = ["//visibility:public"],
    deps = [
        ":babel_config",
        "//:node_modules/@testing-library/jest-dom",
        "//:node_modules/abort-controller",
        "//:node_modules/babel-jest",
        "//:node_modules/core-js",
        "//:node_modules/identity-obj-proxy",
        "//:node_modules/regenerator-runtime",
        "//client/shared/dev:mock",
    ],
)

js_library(
    name = "babel_config",
    testonly = True,  # should only be used for jest tests
    srcs = [
        "babel.config.js",
        "package.json",
    ],
    visibility = ["//visibility:private"],
    deps = [
        "//:node_modules/@babel/plugin-transform-typescript",  #TODO(bazel): remove when babel typescript compiling removed
        "//:node_modules/@babel/preset-env",
        "//:node_modules/@babel/preset-react",
        "//:node_modules/@babel/preset-typescript",  #TODO(bazel): remove when babel typescript compiling removed
        "//:node_modules/babel-plugin-lodash",
        "//:node_modules/babel-plugin-webpack-chunkname",
        "//:node_modules/semver",
        "//:node_modules/signale",

        # TODO: not directly require/import-ed but they are used without delcared in package.json
        # "//:node_modules/babel-plugin-istanbul",
    ],
)
